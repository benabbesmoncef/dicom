{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","cornerstoneWADOImageLoader","external","cornerstone","webWorkerManager","initialize","webWorkerPath","taskConfiguration","codecsPath","files","length","imageList","fileList","Array","from","sort","a","b","name","wadouri","dataSetCacheManager","purge","i","dicomFile","imageId","fileManager","add","push","viewPort","resetAllTools","loadStudyImages","alert","loadDICOMImages","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DICOMViewerComponent } from 'ng-dicomviewer';\n\ndeclare const cornerstone;\ndeclare const cornerstoneWADOImageLoader;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild(DICOMViewerComponent, { static: true }) viewPort: DICOMViewerComponent;\n\n  ngOnInit() {\n    cornerstoneWADOImageLoader.external.cornerstone = cornerstone; // inicializa WADO Image loader\n\n    // configura codecs e web workers\n    cornerstoneWADOImageLoader.webWorkerManager.initialize({\n        webWorkerPath: './assets/cornerstone/webworkers/cornerstoneWADOImageLoaderWebWorker.js',\n        taskConfiguration: {\n            'decodeTask': {\n                codecsPath: '../codecs/cornerstoneWADOImageLoaderCodecs.js'\n            }\n        }\n    });\n\n  }\n\n  /**\n   * Load selected DICOM images\n   *\n   * @param files list of selected dicom files\n   */\n  loadDICOMImages(files: FileList) {\n    if (files && files.length > 0) {\n      let imageList = [];\n      const fileList:Array<File> = Array.from(files);\n      fileList.sort((a,b) => {\n        if ( a.name > b.name ) return 1;\n        if ( b.name > a.name ) return -1;\n        return 0;\n      })\n      //cornerstoneWADOImageLoader.wadouri.fileManager.purge();\n      cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.purge();\n\n      // loop thru the File list and build a list of wadouri imageIds (dicomfile:)\n      for (let i = 0; i < fileList.length; i++) {\n        const dicomFile: File = fileList[i];\n        const imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(dicomFile);\n        imageList.push(imageId);\n      }\n\n      this.viewPort.resetAllTools();\n\n      // now load all Images, using their wadouri\n      this.viewPort.loadStudyImages(imageList);\n\n    } else alert('Escolha imagens DICOM a exibir.');\n  }\n}\n","<div style=\"height:100%; width: 100%;\">\n  <div style=\"display: flex; margin-left: 120px; align-items: center;\">\n    <h1>\n      A demo DICOM Viewer, based on <a href=\"https://github.com/cornerstonejs\">Cornerstone</a>\n    </h1>\n\n    <div class=\"choose_file\">\n      Choose Your DICOM Files\n      <input class=\"hide_file\" type=\"file\" multiple accept=\"application/dicom\" id=\"imagens\" title=\"selecione arquivos de imagens\"\n      (change)=\"loadDICOMImages($event.target.files)\">\n    </div>\n\n\n\n  </div>\n\n  <div style=\"display: flex;height: calc(100% - 90px); width:100%;\">\n    <dicom-viewer [enableViewerTools]=\"true\" [enablePlayTools]=\"true\" [maxImagesToLoad]=\"20\" style=\"height:100%; width:100%; margin: 10px;\"></dicom-viewer>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppComponent } from './app.component';\nimport { DicomViewerModule } from 'ng-dicomviewer'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    MatProgressSpinnerModule,\n    DicomViewerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"]}